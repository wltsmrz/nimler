defmodule NimlerIntegration do
  @on_load :init

  def init(),
    do:
      :erlang.load_nif(
        to_charlist(Path.join(Path.dirname(__ENV__.file), 'nif')),
        0
      )

  def is_atom(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_binary(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_current_process_alive(), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_empty_list(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_exception(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_fun(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_identical(_, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_list(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_map(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_number(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_pid(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_pid_undefined(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_process_alive(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_ref(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def is_tuple(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_atom(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_atom_length(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_string(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_int(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_long(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_int64(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_uint(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_ulong(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_uint64(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_double(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_tuple(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_list_length(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_list_cell(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_map_size(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_map_value(_, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def get_local_pid(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_map_put(_, _, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_map_remove(_, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_map_update(_, _, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_string(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_string_len(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_list(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_list_cell(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_list_from_array(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_reverse_list(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_tuple(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_tuple_from_array(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_int(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_long(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_int64(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_uint(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_ulong(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_uint64(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_double(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_new_binary(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_new_map(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_map_from_arrays(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_atom(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_existing_atom(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_existing_atom_len(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_copy(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_pid(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_ref(), do: :erlang.nif_error(:nif_library_not_loaded)
  def make_unique_integer(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_compare(_, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def term_type(_, _, _, _, _, _), do: :erlang.nif_error(:nif_library_not_loaded)
  def system_info(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_raise_exception(_), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_monotonic_time(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_convert_time_unit(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_time_offset(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_cpu_time(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_now_time(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_fprintf(), do: :erlang.nif_error(:nif_library_not_loaded)
  def e_snprintf(), do: :erlang.nif_error(:nif_library_not_loaded)
end
